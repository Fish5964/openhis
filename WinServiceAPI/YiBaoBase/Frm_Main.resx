<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rv+Rp6j/k9nf/23S3/8hnrv9D5vB/ELK3/5k7PT/F9Dr/wK65P9uw9WyirK2SFuEjDAAAAAdAAAAGw8T
        FRQjKSoHAAAAAAAAAAClo6LtzMnFwXh3dCG0sazfoZyWt3x5b5qAfnbjhYJ7/ouIg/55dm3/j46I/sK9
        uv7b2NT/xMK//s3KyP/k393+xMLA/tbV0v7Mycf/ubi2/uLe2/7Szcr/1dHN/tPPy/7Tzsv/1dDO/trV
        0v7e2tf/5eDe/ufi4P7RzMr/v8PC/qCurv5kb3H/K3OF/mTl7v9e4/D+Itnv/gaaw/9ManKKLVBVEjZx
        ewEgPEEHJDk+B0ZeYwQAAAAAAAAAAAAAAAC0srDv1tHOw4B+fCGcmZHUXVhP93FuaPtyb2j/c3Fp/pqX
        kf6+ubP/vLu3/tjV1P7b2dX/u7e1/sO/vP/a1dD+wsG+/tXU0f7IxcH/t7Sz/tvX1f7JxMD/zMfD/svH
        wv7Mx8P/y8bB/snEv/7Iwr3/yMO+/svGwP7PycP/083G/tbOyf7As7H/SnyI/m/m6/9S2ur+Idvu/gqc
        vP9XZGTna2VgnD1GRiIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC+v7zvwsG+w4eFgyGal5LRY2BZ/4qG
        gf+JhXz/n5qU/8bDwf/Wzsn/vbe0/8zJxf/RzMf/trOy/8S/vv/b2NH/xcTA/9rY1v/Ny8j/vLy5/+Pf
        3v/W0s//29fV/9rX1v/a2tb/3NrW/93Z2P/d29j/3dnZ/9zY1//a2NT/2dTR/9nUz//FurX/VYuW/2Lq
        7/850ef/Eczr/wafw/89VV3/ZWRi/2dlYvdycGvKjIV/a42SkCqRk5EOAAAAAAAAAAC4tbTqu7i2xJiW
        lCKem5TReXRt/qainf6/uLH/tbCq/r+7uf7Evrn/tbGs/sbBvf7Hwr3/s7Cu/sG9u//Vzsr+wL+7/tnV
        1P7Lx8L/urm3/uTh3/7W0s//29jU/t3a2P7f3dr/4d7c/uPg3/7k4+H/5uTi/unm4/7q6ef/6+no/vPw
        7v7HyMr/W6W1/mvy9/8yzOP+EMfq/gSIq/9tb3H+lpKS/n19fP9tbW79cnBx7JGKhsyvpqCIoqGeOpiX
        lArEwr7hv767xKWjoSKrp6HTn5mU+bOuqfzCubP/rqik/rGsqP6yq6X/ramj/r25tf63rqn/q6ak/re0
        sP++ta/+tbSw/s7Ixf64tK//r6+s/tLMx/66tLD/wLu1/sG8uP7Ev7r/xb+7/sjBvf7KxMH/ysTA/szH
        wv7Qy8b/0s3J/tvX0v6tsLP/VqK0/m/y9/8yzuL+Ds3q/gWFpv+XlJT+7eno/tDPz/+ipab+goSF/mVl
        Zf9fXl71eHZ114OBe5axsK75xMO/vbCuqh6tqqPWp6Ob262qpe60raadpqKc266qpP6tpJ37qaSg/Lm0
        sf+spJ3/paKe/7Swqv+0q6T/t7Ku/7y5tf+vqqj/vrm5/8C5s/+0rab/t7Kp/7ixrf+7tK3/vLWu/7y2
        sf++uLL/v7m0/7+6tP/Bu7j/wbu2/8S+uf+ooJz/UJWf/2fw9P9D3/H/Etvz/wOkyv91lJr/3NnU/+Tf
        2//Z1dL/y8fC/7Kvrf+Eg4X/ZmZp/1lbWf9jYWX+j42Lta2rqByqpp/WnJeQ0q2qpeuvq6Uko6GZn7Kv
        qe2xq6WvqKOe07awrv6rpJ3/q6aj/rq1sf+zq6T+o56c/qOjo/68u7r/zcbD/r23sf7AurX/wr23/sO+
        uf7Hwbz/yMO+/srGwP7NycP/0MvG/s7Lx/7Tzsv/29fR/uPd1/7OyMD/hbCz/nLb3/89vdL+D6zH/gaB
        oP93j5H+z8nA/tTMxf/OyMP+1dDL/t/c2P/U0M/+srCt/puZl/9xcnT+hYSBt6yqphyppqHXnZmS266s
        p+6kn5kUm5iRpba0r9vCvrsssrCrksbDv7S0rqaYnZiT4ZqWlf6fm5j+paOi/ri0s/7Gwr3/w721/ru2
        sP7Bu7f/wr64/sW/uv7Iwr3/y8XA/s7KxP7LycL/z8vH/tvW0P7h29P/2NHK/snCvP7At7D/urOu/r66
        uP/Avbr+v8K+/sHCv//d087+5+Ha/uLc1v/X0Mr+0szE/tvW0f/w8O/+8O/u/urn5v/P0ND9vby5trWz
        sByqpZ/XnJiR2q6rpu6loJsWnpqUqcK/us+rp6IYop+ZjKuqpdqUkozfkpGO+66rquK8u7a6v7u3z8K8
        te6+ubD8v7mz/8XAuv/Kxb3/ysS9/8rDvv/MxsH/zMnC/87KxP/V0Mr/2tLI/8i/tf+poZv/oJmT/5yW
        kv+hnJn/q6qn/725tv/MxsH/z8jC/8/KxP/W0Mz/29bU/+Db2P/j39r/4dvW/9vTzf/Y1M3/6ujn/+Dd
        2bvMy8n8zczIu7u6th2qpp/XnpmS1bOuquyopJ0RnpuUl6OgnOyempSxkY2H2aKem/6mpaHBrauof724
        tUXCv7kfvLezN7u2rma/u7ShwLu10MnCvfTIw7v/zsnA/tPNxf7W0Mr/z8rA/sS7s/65r6f/pJuS/o6H
        ff6Ce3b/iYJ9/peRjf6nop7/s6+s/r+5tf/Jwbz+y8bA/s/IxP/Tzsr+1tHN/tjU0v/h3dr+7Ojo/t7Z
        0/iyqaLYvru578PAvFSuq6joxcK/wby6tiGsqKHfoJqU1qqnoOuhnZd+kIyE0YmFgv2cmZX6qqejzLa0
        sGywraggsa2oAwAAAAAAAAAAAAAAALi0rgS7trEUvrizN8bCvHC9ubK2yMO82dHKwfjV0cn/2NTN/87G
        vv+Nhnr/aGBY/25kYP+Ig33/mJKM/6igm/+6sq3/xby3/8zFvv/Sy8f/19PO/9vY0//g3dn/4d7a/+Dd
        2//m4+D/8e3t/9nX08SsqKFqt7azz8C+vD+yrq3cxsK+w726tiKjoJjKh4N68JCOhveOjYb4npuV1qej
        oKfCwLpDu7izBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBvbcDwL23JcC9
        uGrGwbuyz83F09vZ0fCSjIL/d25k/omAef6onpf/ta2m/sO8tf7SysX/19HO/tzY1f/l4t7+6+nn/vHu
        7P/08vD++Pf1/vr5+P/5+vj+6Obk5s/Mx1HBvrsuvry61sPBvz+xsK3mxMO+wsC+uiGhnZRpjoqCwKqn
        oa2ppqF/tbOuL6qnogMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC9uLEGtrGqLcbDvGuppZ2zm5OK86eelP6+tKv/wru0/snBvP7Qy8b/1dHN/tva
        1f/h39v+5uTh/u3q6f/29fX++/v6/vb19P/T0c/yvby51sXCvyvCv7s1v7276cXDwT+xr63jwsK9wsPB
        vSGlopwJurWxKLayrhumo50GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL23sAO1sKgjtK6mgbeyqdO4r6j/vrix/8rC
        vf/Uzsv/2dXR/+He2//q6OT/8O7r//Lw7f/t7uz/6Ofl8N/c2amppp+dn56Y38C9ui/Cv7s1wb+868bD
        wT+wra3jw8G+wsTBviEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALi0
        rRm9trB2v7mzp7m0r+fGwrv/1tHN/trU0/rY1NDw19XS/NbQzry0r6rKraqm2MC9uS22s69Gpqag6b27
        tzW6t7Q1vLu568PAvT+wsK3jw8K+wsC+uiEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC3sasDurSvD6Semayppp35uLOt97qzsM+ppJ6Gq6ik8bu3s0qtqKJVqaai6Ly5
        tjicmZRXqaej6by6tjS1sq82u7q368HAvD+wrqzfxMK/xL+8uCIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKSemLCjn5fepKCZ4Kmjn5GuqqRBqqai87q2
        r0utqaNXsq+r8by5tTyKiIBeqKWi6Ly5tjS1sq80vr676cG/vD+rqqjnwb+8wL67tyAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKainbampJ3lqaah66+s
        pamyrqk/raqm9rayq1CnopxfsrCs8bm3szuYlY9Yraum47q3tDKtq6Yxvr2436yno6Cvr6v8uLSwoLi2
        shIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKWh
        m7WmoZvjqKSe6K6qo6auqqU/raml9bWxq0isqaNStrSw57a0rzifmpZOpKGe7KeloXiUkYyPn5+e9J+e
        nfzEwr/W0s/LTby6twIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKWgm7Wnopzkp6Sf6a+rpZ6rp6I/sa6p77Kvqjumopw/r62o6qWhnGOLh4G1joyK/pGR
        jvCop6b3ubi17bi2sMfDvrpGuri0CQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKOfmbmppJ3iqqeh4q6ppJ2jnpdDrKmi7aKfmaaHgnuzkpGN+peW
        k/ynpKDrtLKu0rq3tKjCwLxOxcG9Hb66tQsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKOfmA6ZlY0MAAAAAJyZkbGkopnsqKWf4J2YkdqBfXSdj42F+5iV
        jv6bmJP0tLGuubu3tIqyr6pYurezL766thAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAo52XE6mknpGYlIyGoJyVAY2HfoSCfXL8hoF6+I6I
        gv6Rjoj5qqik/ru4s7OopaA6sK2oHrKuqQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAo52XGKmjncmfmJO+nJaPB4eC
        eQuSjod5tLCskbCspk6jn5lwqqii97m3sHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAop2WGKWg
        nMiYk4y3mZSMAwAAAACempMKs6+rEqejngKhnZc/p6Oe+bWyrXoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAop2WDqijnLOVkormjYh/gomEelOVkYgjop2YDKGdlwGgnZc/qaWh/rizr4QAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAf/8AAIAAAAB//wAAgAAAAH//
        AAAAAAAAP/8AAAAAAAA//wAAAAAAAD//AAAAAAAAP/8AAAAAAABf/wAAAAAAAB//AAAAAAAAAA8AAAAA
        AAAADwAAAAAAAAAPAAAAAAAAAA8AAAAAAAAAPwAAAAAAAAA/AAAAAAAAAAcAAAAAAAAABgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAABgAAAAAAAAAOAAAAAAAAAH4AAAAAAAAABgAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAA
        AAAA/8AAAAAAAAP/+AAAAAAAD//+AAAAAAD////AAAAAAP///+AAAAAA////+AAAAAD////4AAAAAP//
        //gAAAAA////+AABAAD////4AAcAAP///8gAPwAA////gAH/AAD///+AD/8AAP///4QP/wAA////gA//
        AAA=
</value>
  </data>
</root>